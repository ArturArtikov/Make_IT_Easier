{"cells":[{"cell_type":"markdown","metadata":{"id":"7BSTvPKVH16C"},"source":["## Этап 1. Установка библиотек и импорт данных"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"v6YksvqkG4Px","executionInfo":{"status":"ok","timestamp":1730104701907,"user_tz":-180,"elapsed":3502,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"outputs":[],"source":["from sklearn.ensemble import HistGradientBoostingClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import roc_auc_score\n","from sklearn.decomposition import PCA\n","import pandas as pd\n","import numpy as np\n","import glob\n","import os"]},{"cell_type":"markdown","metadata":{"id":"8waeh_9bH69F"},"source":["Подключаемся в Google Drive, чтобы работать с файлами из Google Colaboratory\n"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"l6AFp2hgHy1T","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730104705924,"user_tz":-180,"elapsed":4020,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}},"outputId":"a3b03817-cbed-4904-b9dd-79316229320f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)"]},{"cell_type":"markdown","metadata":{"id":"W6nQHnFAH-Nk"},"source":["Указываем путь к корневым папкам с данными test и train\n","\n","__Обратите внимание:__ если вы создали папку с названием отличным от _\"Хакатон Альфа-банка. Кейс 2\"_, то необходимо поменять путь к директории и ссылки ниже"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"NVT1w2PcH9xb","executionInfo":{"status":"ok","timestamp":1730104705924,"user_tz":-180,"elapsed":5,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"outputs":[],"source":["# Путь к папке с тренировочными данными\n","path_train = '/content/drive/MyDrive/Хакатон Альфа-банка. Кейс 2/train'\n","# Путь к папке с тестовыми данными\n","path_test = '/content/drive/MyDrive/Хакатон Альфа-банка. Кейс 2/test'"]},{"cell_type":"markdown","metadata":{"id":"N7n_2rQjIRA4"},"source":["Получим список файлов в каждой из папок с данными"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"kbT6mg2_IScQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730104705924,"user_tz":-180,"elapsed":4,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}},"outputId":"aeac10e7-dce8-45bd-fdca-e61696ff5ce7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Список файлов в репозитории train: ['train_1.csv', 'train_2.csv', 'train_3.csv', 'train_4.csv', 'train_5.csv', 'train_6.csv', 'train_8.csv', 'train_7.csv', 'train_9.csv', 'train_10.csv']\n","Список файлов в репозитории test: ['test_1.csv', 'test_2.csv', 'test_3.csv', 'test_4.csv', 'test_5.csv', 'test_6.csv', 'test_7.csv', 'test_8.csv', 'test_9.csv', 'test_10.csv']\n"]}],"source":["print(*[f'Список файлов в репозитории {x.split(\"/\")[-1]}: {sorted(os.listdir(x), key=lambda x: len(x))}' for x in [path_train, path_test]], sep='\\n')"]},{"cell_type":"markdown","metadata":{"id":"pal8xcI_asZ8"},"source":["Объединим тренировочные данные в единый датасет train"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"qmtVg6PoIZD9","executionInfo":{"status":"ok","timestamp":1730105652318,"user_tz":-180,"elapsed":946397,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"outputs":[],"source":["# Получим список файлов в папке train\n","filenames_train = glob.glob(path_train + \"/*.csv\")\n","\n","# Инициализируем PCA для сжатия данных\n","pca = PCA(n_components=55, random_state=42)\n","# Считываем первый датасет для обучения\n","learn = pd.read_csv(filenames_train[0])\n","# Обучаем PCA на первом датасете без искомых признаков\n","pca.fit(learn.drop(['target', 'smpl', 'id'], axis=1))\n","# Создаем список с названием новых фичей\n","new_columns = [f'feature_{i}' for i in range(1, 55+1)]\n","\n","\n","def compression(filename, features=['target', 'smpl', 'id']):\n","  # Переводим переменные в глобальную область видимости\n","  global data, base_info, transformed_data, result\n","  # Считываем файл данных\n","  data = pd.read_csv(filename)\n","  # Отделяем базовые данные\n","  base_info = data[features]\n","  # Трансформируем данные\n","  transformed_data = pd.DataFrame(pca.transform(data.drop(features, axis=1)))\n","  # Объединяем изначальную часть и преобразованные данные\n","  result = pd.concat([base_info, transformed_data], ignore_index=True, axis=1)\n","  # Обновляем названия признаков\n","  result.columns = [*features, *new_columns]\n","  # Возвращаем результат обработки\n","  return result\n","\n","\n","# Создадим список для записи считанных и обработанных файлов\n","data_files_train = []\n","\n","\n","# Обработаем все файлы из списка\n","for filename in filenames_train:\n","  # Добавляем в список очищенный датасет\n","  data_files_train.append(compression(filename))"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"XZfa5CtULnV1","executionInfo":{"status":"ok","timestamp":1730105653884,"user_tz":-180,"elapsed":1583,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"outputs":[],"source":["# Объединим тренировочные данные в один датасет\n","train_data = pd.concat(data_files_train, ignore_index=True)\n","\n","# Удалим ненужные переменные для очистки памяти\n","del learn, data_files_train, filenames_train, path_train, data, base_info, transformed_data, result"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"CF8j-2EPbE78","colab":{"base_uri":"https://localhost:8080/","height":404},"executionInfo":{"status":"ok","timestamp":1730105654529,"user_tz":-180,"elapsed":652,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}},"outputId":"6dee48a4-cd21-4282-9f9d-7da459468733"},"outputs":[{"output_type":"display_data","data":{"text/plain":["'Размерность полных тренировочных данных составляет: 4490468 строка и 58 столбец'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["   target   smpl  id  feature_1  feature_2  feature_3  feature_4  feature_5  \\\n","0       0  train   0  42.006207  15.517296   4.940232   6.346055  -1.979465   \n","1       0  train   1 -13.597457  -6.453639  16.722364  -0.068598 -10.888593   \n","2       0  train   2 -12.688281   5.592698 -14.859004 -13.243453  12.994913   \n","3       0  train   3 -11.779575  16.233626   2.801769   4.876879  -3.115868   \n","4       0  train   4 -10.706816   5.628017 -14.332889   4.321079   5.964782   \n","\n","   feature_6  feature_7  ...  feature_46  feature_47  feature_48  feature_49  \\\n","0  -6.538235   3.497902  ...   -0.647815    0.754459   -0.423929   -1.122210   \n","1  -7.402630   0.907075  ...   -0.039877    0.600228    0.206931   -0.329866   \n","2  -2.133919  -2.565602  ...    1.157756   -0.359084   -0.825518   -0.039303   \n","3   7.036391  -3.151196  ...    2.095697   -0.831778    4.180371   -0.202930   \n","4   2.333612  -4.010841  ...    3.105172    0.080890    0.514259    0.270161   \n","\n","   feature_50  feature_51  feature_52  feature_53  feature_54  feature_55  \n","0   -0.713939   -0.158646   -2.031418    0.543830   -0.199028    1.237532  \n","1   -1.093605   -0.261546    1.276249   -0.968771    0.025055    0.575601  \n","2    0.301419   -1.346912   -0.547231    0.720332    0.385774    0.590663  \n","3   -0.155550   -0.181392    0.219129    1.288987    0.112821   -1.691353  \n","4   -0.388989    0.048624    2.882835   -0.898764   -0.531090    0.562919  \n","\n","[5 rows x 58 columns]"],"text/html":["\n","  <div id=\"df-2ec950b9-a53b-48e4-a84d-267c09f9a8f1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target</th>\n","      <th>smpl</th>\n","      <th>id</th>\n","      <th>feature_1</th>\n","      <th>feature_2</th>\n","      <th>feature_3</th>\n","      <th>feature_4</th>\n","      <th>feature_5</th>\n","      <th>feature_6</th>\n","      <th>feature_7</th>\n","      <th>...</th>\n","      <th>feature_46</th>\n","      <th>feature_47</th>\n","      <th>feature_48</th>\n","      <th>feature_49</th>\n","      <th>feature_50</th>\n","      <th>feature_51</th>\n","      <th>feature_52</th>\n","      <th>feature_53</th>\n","      <th>feature_54</th>\n","      <th>feature_55</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>train</td>\n","      <td>0</td>\n","      <td>42.006207</td>\n","      <td>15.517296</td>\n","      <td>4.940232</td>\n","      <td>6.346055</td>\n","      <td>-1.979465</td>\n","      <td>-6.538235</td>\n","      <td>3.497902</td>\n","      <td>...</td>\n","      <td>-0.647815</td>\n","      <td>0.754459</td>\n","      <td>-0.423929</td>\n","      <td>-1.122210</td>\n","      <td>-0.713939</td>\n","      <td>-0.158646</td>\n","      <td>-2.031418</td>\n","      <td>0.543830</td>\n","      <td>-0.199028</td>\n","      <td>1.237532</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>train</td>\n","      <td>1</td>\n","      <td>-13.597457</td>\n","      <td>-6.453639</td>\n","      <td>16.722364</td>\n","      <td>-0.068598</td>\n","      <td>-10.888593</td>\n","      <td>-7.402630</td>\n","      <td>0.907075</td>\n","      <td>...</td>\n","      <td>-0.039877</td>\n","      <td>0.600228</td>\n","      <td>0.206931</td>\n","      <td>-0.329866</td>\n","      <td>-1.093605</td>\n","      <td>-0.261546</td>\n","      <td>1.276249</td>\n","      <td>-0.968771</td>\n","      <td>0.025055</td>\n","      <td>0.575601</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>train</td>\n","      <td>2</td>\n","      <td>-12.688281</td>\n","      <td>5.592698</td>\n","      <td>-14.859004</td>\n","      <td>-13.243453</td>\n","      <td>12.994913</td>\n","      <td>-2.133919</td>\n","      <td>-2.565602</td>\n","      <td>...</td>\n","      <td>1.157756</td>\n","      <td>-0.359084</td>\n","      <td>-0.825518</td>\n","      <td>-0.039303</td>\n","      <td>0.301419</td>\n","      <td>-1.346912</td>\n","      <td>-0.547231</td>\n","      <td>0.720332</td>\n","      <td>0.385774</td>\n","      <td>0.590663</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>train</td>\n","      <td>3</td>\n","      <td>-11.779575</td>\n","      <td>16.233626</td>\n","      <td>2.801769</td>\n","      <td>4.876879</td>\n","      <td>-3.115868</td>\n","      <td>7.036391</td>\n","      <td>-3.151196</td>\n","      <td>...</td>\n","      <td>2.095697</td>\n","      <td>-0.831778</td>\n","      <td>4.180371</td>\n","      <td>-0.202930</td>\n","      <td>-0.155550</td>\n","      <td>-0.181392</td>\n","      <td>0.219129</td>\n","      <td>1.288987</td>\n","      <td>0.112821</td>\n","      <td>-1.691353</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>train</td>\n","      <td>4</td>\n","      <td>-10.706816</td>\n","      <td>5.628017</td>\n","      <td>-14.332889</td>\n","      <td>4.321079</td>\n","      <td>5.964782</td>\n","      <td>2.333612</td>\n","      <td>-4.010841</td>\n","      <td>...</td>\n","      <td>3.105172</td>\n","      <td>0.080890</td>\n","      <td>0.514259</td>\n","      <td>0.270161</td>\n","      <td>-0.388989</td>\n","      <td>0.048624</td>\n","      <td>2.882835</td>\n","      <td>-0.898764</td>\n","      <td>-0.531090</td>\n","      <td>0.562919</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 58 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ec950b9-a53b-48e4-a84d-267c09f9a8f1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2ec950b9-a53b-48e4-a84d-267c09f9a8f1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2ec950b9-a53b-48e4-a84d-267c09f9a8f1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7ee97b7b-b0d2-4d7f-bc5e-15119108db03\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ee97b7b-b0d2-4d7f-bc5e-15119108db03')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7ee97b7b-b0d2-4d7f-bc5e-15119108db03 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["smpl\n","train    4490468\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>smpl</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>train</th>\n","      <td>4490468</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}}],"source":["# Выведем информацию о размерности данных\n","display('Размерность полных тренировочных данных составляет: {} строка и {} столбец'.format(*train_data.shape))\n","\n","# Выведем первые 5 строчек тренировочных данных\n","display(train_data.head())\n","\n","# Удостоверимся, что перед нами данные только из выборки train\n","display(train_data['smpl'].value_counts())"]},{"cell_type":"markdown","metadata":{"id":"pitgWL_3bgwy"},"source":["Объединим тестовые данные в единый датасет test"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"hlOghKmrWd4u","executionInfo":{"status":"ok","timestamp":1730105750836,"user_tz":-180,"elapsed":96308,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"outputs":[],"source":["# Получим список файлов в папке test\n","filenames_test = glob.glob(path_test + \"/*.csv\")\n","\n","# Создадим список для записи считанных файлов\n","data_files_test = []\n","\n","# Обработаем все файлы из списка\n","for filename in filenames_test:\n","  # Добавляем в список очищенный датасет\n","  data_files_test.append(compression(filename, features=['smpl', 'id']))"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"FE_PuEQWH7DJ","executionInfo":{"status":"ok","timestamp":1730105750836,"user_tz":-180,"elapsed":6,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"outputs":[],"source":["# Объединим тестовые данные в один датасет\n","test_data = pd.concat(data_files_test, ignore_index=True)\n","\n","# Удалим ненужные переменные для очистки памяти\n","del data_files_test, filenames_test, path_test, data, base_info, transformed_data, result"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"r8i_vjC-bnU8","colab":{"base_uri":"https://localhost:8080/","height":404},"executionInfo":{"status":"ok","timestamp":1730105750836,"user_tz":-180,"elapsed":6,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}},"outputId":"c291ab1c-245a-4f39-99b2-e0095c90056a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["'Размерность полных тестовых данных составляет: 509532 строка и 57 столбец'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["   smpl       id  feature_1  feature_2  feature_3  feature_4  feature_5  \\\n","0  test  4490468 -12.695455   0.163472 -13.671015   7.906316   1.944711   \n","1  test  4490469  35.362040 -14.147303  -1.172192   8.171919   6.679985   \n","2  test  4490470 -12.622832   2.764752  -7.166607   4.441077   2.202404   \n","3  test  4490471 -12.300239 -15.104861  -0.463951  -2.150375  -6.628475   \n","4  test  4490472 -11.727949  10.671911   2.570685  -0.307028 -12.077687   \n","\n","   feature_6  feature_7  feature_8  ...  feature_46  feature_47  feature_48  \\\n","0  -0.134665   7.693033  -0.910276  ...    0.164442   -0.612085    0.759945   \n","1  -0.310231   3.924845   0.729583  ...   -0.000145    0.236745    0.173128   \n","2   1.964773  -0.643473   3.571186  ...    0.388183   -0.603007   -0.183735   \n","3  -2.647851  -8.655878   4.651609  ...   -0.238729    1.292116   -1.075549   \n","4   2.664341   0.264402   3.136030  ...    0.346262    0.860573    0.693407   \n","\n","   feature_49  feature_50  feature_51  feature_52  feature_53  feature_54  \\\n","0    1.003682    0.198614   -1.774331    1.566842   -1.359779    1.848255   \n","1    0.513046    1.210881    0.034143    0.651346   -1.323396   -0.025261   \n","2    1.043912    0.723840    1.664081   -1.822272   -0.178768   -0.055758   \n","3    1.227171    1.056335   -0.065499   -1.542230    0.834664    1.292229   \n","4   -0.747928    1.239710   -0.943528   -0.879645    0.003451    0.010768   \n","\n","   feature_55  \n","0    0.161770  \n","1   -0.647224  \n","2   -0.604424  \n","3   -0.142889  \n","4    1.429321  \n","\n","[5 rows x 57 columns]"],"text/html":["\n","  <div id=\"df-9018d871-46f6-4c1e-a6f3-8df098010bc5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>smpl</th>\n","      <th>id</th>\n","      <th>feature_1</th>\n","      <th>feature_2</th>\n","      <th>feature_3</th>\n","      <th>feature_4</th>\n","      <th>feature_5</th>\n","      <th>feature_6</th>\n","      <th>feature_7</th>\n","      <th>feature_8</th>\n","      <th>...</th>\n","      <th>feature_46</th>\n","      <th>feature_47</th>\n","      <th>feature_48</th>\n","      <th>feature_49</th>\n","      <th>feature_50</th>\n","      <th>feature_51</th>\n","      <th>feature_52</th>\n","      <th>feature_53</th>\n","      <th>feature_54</th>\n","      <th>feature_55</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>test</td>\n","      <td>4490468</td>\n","      <td>-12.695455</td>\n","      <td>0.163472</td>\n","      <td>-13.671015</td>\n","      <td>7.906316</td>\n","      <td>1.944711</td>\n","      <td>-0.134665</td>\n","      <td>7.693033</td>\n","      <td>-0.910276</td>\n","      <td>...</td>\n","      <td>0.164442</td>\n","      <td>-0.612085</td>\n","      <td>0.759945</td>\n","      <td>1.003682</td>\n","      <td>0.198614</td>\n","      <td>-1.774331</td>\n","      <td>1.566842</td>\n","      <td>-1.359779</td>\n","      <td>1.848255</td>\n","      <td>0.161770</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>test</td>\n","      <td>4490469</td>\n","      <td>35.362040</td>\n","      <td>-14.147303</td>\n","      <td>-1.172192</td>\n","      <td>8.171919</td>\n","      <td>6.679985</td>\n","      <td>-0.310231</td>\n","      <td>3.924845</td>\n","      <td>0.729583</td>\n","      <td>...</td>\n","      <td>-0.000145</td>\n","      <td>0.236745</td>\n","      <td>0.173128</td>\n","      <td>0.513046</td>\n","      <td>1.210881</td>\n","      <td>0.034143</td>\n","      <td>0.651346</td>\n","      <td>-1.323396</td>\n","      <td>-0.025261</td>\n","      <td>-0.647224</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>test</td>\n","      <td>4490470</td>\n","      <td>-12.622832</td>\n","      <td>2.764752</td>\n","      <td>-7.166607</td>\n","      <td>4.441077</td>\n","      <td>2.202404</td>\n","      <td>1.964773</td>\n","      <td>-0.643473</td>\n","      <td>3.571186</td>\n","      <td>...</td>\n","      <td>0.388183</td>\n","      <td>-0.603007</td>\n","      <td>-0.183735</td>\n","      <td>1.043912</td>\n","      <td>0.723840</td>\n","      <td>1.664081</td>\n","      <td>-1.822272</td>\n","      <td>-0.178768</td>\n","      <td>-0.055758</td>\n","      <td>-0.604424</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>test</td>\n","      <td>4490471</td>\n","      <td>-12.300239</td>\n","      <td>-15.104861</td>\n","      <td>-0.463951</td>\n","      <td>-2.150375</td>\n","      <td>-6.628475</td>\n","      <td>-2.647851</td>\n","      <td>-8.655878</td>\n","      <td>4.651609</td>\n","      <td>...</td>\n","      <td>-0.238729</td>\n","      <td>1.292116</td>\n","      <td>-1.075549</td>\n","      <td>1.227171</td>\n","      <td>1.056335</td>\n","      <td>-0.065499</td>\n","      <td>-1.542230</td>\n","      <td>0.834664</td>\n","      <td>1.292229</td>\n","      <td>-0.142889</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>test</td>\n","      <td>4490472</td>\n","      <td>-11.727949</td>\n","      <td>10.671911</td>\n","      <td>2.570685</td>\n","      <td>-0.307028</td>\n","      <td>-12.077687</td>\n","      <td>2.664341</td>\n","      <td>0.264402</td>\n","      <td>3.136030</td>\n","      <td>...</td>\n","      <td>0.346262</td>\n","      <td>0.860573</td>\n","      <td>0.693407</td>\n","      <td>-0.747928</td>\n","      <td>1.239710</td>\n","      <td>-0.943528</td>\n","      <td>-0.879645</td>\n","      <td>0.003451</td>\n","      <td>0.010768</td>\n","      <td>1.429321</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 57 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9018d871-46f6-4c1e-a6f3-8df098010bc5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9018d871-46f6-4c1e-a6f3-8df098010bc5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9018d871-46f6-4c1e-a6f3-8df098010bc5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-217dfcd5-fe6a-4f56-a617-ac289ac606e8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-217dfcd5-fe6a-4f56-a617-ac289ac606e8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-217dfcd5-fe6a-4f56-a617-ac289ac606e8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["smpl\n","test    509532\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>smpl</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>test</th>\n","      <td>509532</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}}],"source":["# Выведем информацию о размерности данных\n","display('Размерность полных тестовых данных составляет: {} строка и {} столбец'.format(*test_data.shape))\n","\n","# Выведем первые 5 строчек тестовых данных\n","display(test_data.head())\n","\n","# Удостоверимся, что перед нами данные только из выборки test\n","display(test_data['smpl'].value_counts())"]},{"cell_type":"markdown","metadata":{"id":"FDVtLazn4dLB"},"source":["## Генерация итогового предсказания"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"Evc955QQW4yK","executionInfo":{"status":"ok","timestamp":1730114865154,"user_tz":-180,"elapsed":1852452,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"outputs":[],"source":["# max_dept: [5, 10, 15, 20, 25]\n","# max_iter: [50, 100, 150, 200, 250]\n","cnt = 20\n","\n","for md in [25]:\n","  for mxi in [50, 100, 150, 200, 250]:\n","\n","    cnt += 1\n","\n","    # Отделяем признаки и таргет во всех файлах\n","    X_train = train_data.drop(['target', 'smpl'], axis=1)\n","    y_train = train_data['target']\n","\n","    # Обучаем модель на полных тренировочных данных\n","    gbdt_clf = HistGradientBoostingClassifier(min_samples_leaf=10,\n","                                          max_depth=md,\n","                                          max_iter=mxi,\n","                                          random_state=42).fit(X_train, y_train)\n","\n","    # Для предсказания используем тестовый датасет с исключенным признаком smpl\n","    if 'target'in test_data.columns:\n","      y_test_pred = gbdt_clf.predict_proba(test_data.drop(['smpl', 'target'], axis=1))\n","    else:\n","      y_test_pred = gbdt_clf.predict_proba(test_data.drop('smpl', axis=1))\n","\n","    # Переводим предсказание в формат Series\n","    y_test_pred = pd.Series(y_test_pred[:, 1])\n","\n","    # Добавляем данные предсказания к датасету\n","    test_data['target'] = y_test_pred\n","\n","    # Сохраняем итоговые данные об id и предсказаниях в формате csv\n","    test_data[['id', 'target']].to_csv(f'/content/drive/MyDrive/DOS-тестирование платформы/2. Стресс-тест №2/Кейс 2. Предсказания/8. PCA55. 25 файлов/{cnt}.case2_min_samples_leaf_{10}_max_depth_{md}_max_iter_{mxi}_PCA55.csv', index=False)\n","\n","    # Удаляем ненужные переменные\n","    del gbdt_clf, y_test_pred"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOAZGjsZ3raPl1w3fyqj6rx"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}