{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1cBBPNaP41g0UzG9Y_FTtf_hsnR1-ZaYC","authorship_tag":"ABX9TyPOSMA6rk+/pnjbjGZDyKYu"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"jxfGz4ROOKDS","executionInfo":{"status":"ok","timestamp":1729887708472,"user_tz":-180,"elapsed":6709,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"outputs":[],"source":["from sklearn.metrics import roc_auc_score\n","import pandas as pd\n","import re\n","import os"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0ptOthnTOWyl","executionInfo":{"status":"ok","timestamp":1729887738735,"user_tz":-180,"elapsed":21216,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}},"outputId":"a19fdf83-d1e2-466a-c39d-984830a893a8"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["predictions = '/content/drive/MyDrive/DOS-тестирование платформы/2. Стресс-тест №2/Обновленные файлы 3'\n","files = os.listdir(predictions)"],"metadata":{"id":"sDZwHB0BPATK","executionInfo":{"status":"ok","timestamp":1729888137626,"user_tz":-180,"elapsed":322,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["data = []\n","target_case3 = pd.read_csv('/content/drive/MyDrive/Хакатон Альфа-банка. Данные для организаторов/targets/targets_case3.csv')"],"metadata":{"id":"sQQTZ_xn2hN1","executionInfo":{"status":"ok","timestamp":1729888140187,"user_tz":-180,"elapsed":644,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["def metric(submission, target=target_case3):\n","  submission = submission[['id', 'target']]\n","  target = target[['id', 'target']]\n","\n","  result = submission.merge(target, left_on=['id'], right_on=['id'])\n","\n","  prediction = result.iloc[:, 1]\n","  y_true = result.iloc[:, 2]\n","\n","  mtrc = max(roc_auc_score(y_true=y_true, y_score=prediction), 1-roc_auc_score(y_true=y_true, y_score=prediction))\n","\n","  return mtrc"],"metadata":{"id":"g8Umq17r32qp","executionInfo":{"status":"ok","timestamp":1729888143007,"user_tz":-180,"elapsed":337,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["for file in files:\n","  # Получим имя файла\n","  name = file.split('.')[:-1]\n","\n","  # Получим все числа из названия файла\n","  numbers = re.findall(r'\\d+', str(name))\n","\n","  # Добавим название самого файла\n","  numbers.append(''.join(file.split('.')[1:]))\n","\n","  # Добавим метрику для данного файла\n","  numbers.append(str(metric(pd.read_csv(predictions+f'/{file}'))))\n","\n","  # Добавим данные по файлу в список с данными\n","  data.append(numbers)"],"metadata":{"id":"ByY16j802q6T","executionInfo":{"status":"ok","timestamp":1729888214928,"user_tz":-180,"elapsed":67810,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["data_df = pd.DataFrame(data, columns=['Номер п/п', 'Номер кейса', 'min_samples_leaf', 'max_depth', 'max_iter', 'Название', 'ROC-AUC'])\n","data_df.head(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":520},"id":"e1kAjCj658Ge","executionInfo":{"status":"ok","timestamp":1729888255509,"user_tz":-180,"elapsed":392,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}},"outputId":"80b4c0e9-83d6-4cce-d3a6-56c8d84dfb2d"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Номер п/п Номер кейса min_samples_leaf max_depth max_iter  \\\n","0         36           3               50       100        1   \n","1         75           3              100        75      200   \n","2         51           3               75        75        1   \n","3         32           3               50        75       50   \n","4         66           3              100        50        1   \n","5         50           3               75        50      200   \n","6         56           3               75       100        1   \n","7         18           3               25       100      100   \n","8         31           3               50        75        1   \n","9         17           3               25       100       50   \n","10        37           3               50       100       50   \n","11       100           3              125       100      200   \n","12        10           3               25        50      200   \n","13        79           3              100       100      150   \n","14        46           3               75        50        1   \n","\n","                                             Название             ROC-AUC  \n","0   case3_50_min_samples_leaf_100_max_depth_1_max_...  0.5096976898592275  \n","1   case3_100_min_samples_leaf_75_max_depth_200_ma...  0.5802822170696107  \n","2   case3_75_min_samples_leaf_75_max_depth_1_max_i...  0.5075419625022559  \n","3   case3_50_min_samples_leaf_75_max_depth_50_max_...  0.5767255230887353  \n","4   case3_100_min_samples_leaf_50_max_depth_1_max_...  0.5061474258617155  \n","5   case3_75_min_samples_leaf_50_max_depth_200_max...   0.579879410804305  \n","6   case3_75_min_samples_leaf_100_max_depth_1_max_...  0.5155945232686824  \n","7   case3_25_min_samples_leaf_100_max_depth_100_ma...  0.5793311962874933  \n","8   case3_50_min_samples_leaf_75_max_depth_1_max_i...  0.5086728172333252  \n","9   case3_25_min_samples_leaf_100_max_depth_50_max...  0.5789116101242613  \n","10  case3_50_min_samples_leaf_100_max_depth_50_max...   0.579948171359214  \n","11  case3_125_min_samples_leaf_100_max_depth_200_m...  0.5823429969888331  \n","12  case3_25_min_samples_leaf_50_max_depth_200_max...  0.5821520593128269  \n","13  case3_100_min_samples_leaf_100_max_depth_150_m...  0.5784570537549127  \n","14  case3_75_min_samples_leaf_50_max_depth_1_max_i...   0.508268140514333  "],"text/html":["\n","  <div id=\"df-a49208b7-c6d5-48fb-900f-e2a7c1f2acec\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Номер п/п</th>\n","      <th>Номер кейса</th>\n","      <th>min_samples_leaf</th>\n","      <th>max_depth</th>\n","      <th>max_iter</th>\n","      <th>Название</th>\n","      <th>ROC-AUC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>36</td>\n","      <td>3</td>\n","      <td>50</td>\n","      <td>100</td>\n","      <td>1</td>\n","      <td>case3_50_min_samples_leaf_100_max_depth_1_max_...</td>\n","      <td>0.5096976898592275</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>75</td>\n","      <td>3</td>\n","      <td>100</td>\n","      <td>75</td>\n","      <td>200</td>\n","      <td>case3_100_min_samples_leaf_75_max_depth_200_ma...</td>\n","      <td>0.5802822170696107</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>51</td>\n","      <td>3</td>\n","      <td>75</td>\n","      <td>75</td>\n","      <td>1</td>\n","      <td>case3_75_min_samples_leaf_75_max_depth_1_max_i...</td>\n","      <td>0.5075419625022559</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>32</td>\n","      <td>3</td>\n","      <td>50</td>\n","      <td>75</td>\n","      <td>50</td>\n","      <td>case3_50_min_samples_leaf_75_max_depth_50_max_...</td>\n","      <td>0.5767255230887353</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>66</td>\n","      <td>3</td>\n","      <td>100</td>\n","      <td>50</td>\n","      <td>1</td>\n","      <td>case3_100_min_samples_leaf_50_max_depth_1_max_...</td>\n","      <td>0.5061474258617155</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>50</td>\n","      <td>3</td>\n","      <td>75</td>\n","      <td>50</td>\n","      <td>200</td>\n","      <td>case3_75_min_samples_leaf_50_max_depth_200_max...</td>\n","      <td>0.579879410804305</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>56</td>\n","      <td>3</td>\n","      <td>75</td>\n","      <td>100</td>\n","      <td>1</td>\n","      <td>case3_75_min_samples_leaf_100_max_depth_1_max_...</td>\n","      <td>0.5155945232686824</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>18</td>\n","      <td>3</td>\n","      <td>25</td>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>case3_25_min_samples_leaf_100_max_depth_100_ma...</td>\n","      <td>0.5793311962874933</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>31</td>\n","      <td>3</td>\n","      <td>50</td>\n","      <td>75</td>\n","      <td>1</td>\n","      <td>case3_50_min_samples_leaf_75_max_depth_1_max_i...</td>\n","      <td>0.5086728172333252</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>25</td>\n","      <td>100</td>\n","      <td>50</td>\n","      <td>case3_25_min_samples_leaf_100_max_depth_50_max...</td>\n","      <td>0.5789116101242613</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>37</td>\n","      <td>3</td>\n","      <td>50</td>\n","      <td>100</td>\n","      <td>50</td>\n","      <td>case3_50_min_samples_leaf_100_max_depth_50_max...</td>\n","      <td>0.579948171359214</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>100</td>\n","      <td>3</td>\n","      <td>125</td>\n","      <td>100</td>\n","      <td>200</td>\n","      <td>case3_125_min_samples_leaf_100_max_depth_200_m...</td>\n","      <td>0.5823429969888331</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>25</td>\n","      <td>50</td>\n","      <td>200</td>\n","      <td>case3_25_min_samples_leaf_50_max_depth_200_max...</td>\n","      <td>0.5821520593128269</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>79</td>\n","      <td>3</td>\n","      <td>100</td>\n","      <td>100</td>\n","      <td>150</td>\n","      <td>case3_100_min_samples_leaf_100_max_depth_150_m...</td>\n","      <td>0.5784570537549127</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>46</td>\n","      <td>3</td>\n","      <td>75</td>\n","      <td>50</td>\n","      <td>1</td>\n","      <td>case3_75_min_samples_leaf_50_max_depth_1_max_i...</td>\n","      <td>0.508268140514333</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a49208b7-c6d5-48fb-900f-e2a7c1f2acec')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a49208b7-c6d5-48fb-900f-e2a7c1f2acec button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a49208b7-c6d5-48fb-900f-e2a7c1f2acec');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-46bc116c-81f9-4380-acfa-11e56851737c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46bc116c-81f9-4380-acfa-11e56851737c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-46bc116c-81f9-4380-acfa-11e56851737c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_df","summary":"{\n  \"name\": \"data_df\",\n  \"rows\": 187,\n  \"fields\": [\n    {\n      \"column\": \"\\u041d\\u043e\\u043c\\u0435\\u0440 \\u043f/\\u043f\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"14\",\n          \"55\",\n          \"35\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u041d\\u043e\\u043c\\u0435\\u0440 \\u043a\\u0435\\u0439\\u0441\\u0430\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min_samples_leaf\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"100\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max_depth\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"75\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max_iter\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"200\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u041d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u0435\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"case3_25_min_samples_leaf_75_max_depth_150_max_itercsv\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ROC-AUC\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"0.578243418301381\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["unique_metrics = set(data_df['ROC-AUC'].to_list())"],"metadata":{"id":"Lfo8FWDibwIq","executionInfo":{"status":"ok","timestamp":1729889718889,"user_tz":-180,"elapsed":331,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["data_df = data_df.drop_duplicates()"],"metadata":{"id":"ZL6PKgdh9cN0","executionInfo":{"status":"ok","timestamp":1729890106479,"user_tz":-180,"elapsed":3,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["names = sorted(data_df['Название'].to_list())"],"metadata":{"id":"hQcbZSI6fE13","executionInfo":{"status":"ok","timestamp":1729890280030,"user_tz":-180,"elapsed":327,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["cleaned_files = '/content/drive/MyDrive/DOS-тестирование платформы/2. Стресс-тест №2/Очищенные файлы №3'\n","counter = 0\n","for name in names:\n","  counter += 1\n","  data = pd.read_csv(predictions+f'/{name[:-3]}.csv')\n","  data.to_csv(f'{counter}'+cleaned_files+f'/{name}.csv', index=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":382},"id":"73iqKgLyfuvv","executionInfo":{"status":"error","timestamp":1729890429620,"user_tz":-180,"elapsed":315,"user":{"displayName":"Артур Артиков","userId":"02303814087280081703"}},"outputId":"4229c84e-9537-4437-8f32-c8299bd98f92"},"execution_count":53,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/content/drive/MyDrive/DOS-тестирование платформы/2. Стресс-тест №2/Обновленные файлы 3/case3_100_min_samples_leaf_100_max_depth_100_max_iter.csv'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-53-94f101fcc7a8>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mnames\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m   \u001b[0mcounter\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m   \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpredictions\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;34mf'/{name[:-3]}.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m   \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf'{counter}'\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0mcleaned_files\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;34mf'/{name}.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1024\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1025\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1026\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1027\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1028\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    619\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 620\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    622\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1619\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1620\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1622\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1878\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1879\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1880\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1881\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1882\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    871\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    872\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 873\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    874\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    875\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/DOS-тестирование платформы/2. Стресс-тест №2/Обновленные файлы 3/case3_100_min_samples_leaf_100_max_depth_100_max_iter.csv'"]}]}]}