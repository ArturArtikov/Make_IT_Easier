{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPTfmXz7Re0qYnWrMmeST/5"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"_dtpyHZ0rQ06"},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","source":["hotels = pd.read_csv('hotels.csv')\n","hotels.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":678},"id":"k591AI9nYW9q","executionInfo":{"status":"ok","timestamp":1701659182608,"user_tz":-180,"elapsed":8,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"a8700566-12ef-431d-ba08-7f4c5b5ac19a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                       hotel_address  \\\n","0  Stratton Street Mayfair Westminster Borough Lo...   \n","1  130 134 Southampton Row Camden London WC1B 5AF...   \n","2   151 bis Rue de Rennes 6th arr 75006 Paris France   \n","3  216 Avenue Jean Jaures 19th arr 75019 Paris Fr...   \n","4          Molenwerf 1 1014 AG Amsterdam Netherlands   \n","\n","   additional_number_of_scoring review_date  average_score  \\\n","0                           581   2/19/2016            8.4   \n","1                           299   1/12/2017            8.3   \n","2                            32  10/18/2016            8.9   \n","3                            34   9/22/2015            7.5   \n","4                           914    3/5/2016            8.5   \n","\n","                                  hotel_name reviewer_nationality  \\\n","0                         The May Fair Hotel      United Kingdom    \n","1            Mercure London Bloomsbury Hotel      United Kingdom    \n","2          Legend Saint Germain by Elegancia               China    \n","3  Mercure Paris 19 Philharmonie La Villette      United Kingdom    \n","4                Golden Tulip Amsterdam West              Poland    \n","\n","       negative_review  review_total_negative_word_counts  \\\n","0             Leaving                                 3.0   \n","1       poor breakfast                                3.0   \n","2   No kettle in room                                 6.0   \n","3          No Negative                                0.0   \n","4         Torn sheets                                 4.0   \n","\n","   total_number_of_reviews                                    positive_review  \\\n","0                   1994.0                                 Staff were amazing   \n","1                   1361.0                                           location   \n","2                    406.0                                        No Positive   \n","3                    607.0   Friendly staff quiet comfortable room spotles...   \n","4                   7586.0   The staff was very friendly and helpful Break...   \n","\n","   review_total_positive_word_counts  \\\n","0                                4.0   \n","1                                2.0   \n","2                                0.0   \n","3                               11.0   \n","4                               20.0   \n","\n","   total_number_of_reviews_reviewer_has_given  reviewer_score  \\\n","0                                         7.0            10.0   \n","1                                        14.0             6.3   \n","2                                        14.0             7.5   \n","3                                         8.0            10.0   \n","4                                        10.0             9.6   \n","\n","                                                tags days_since_review  \\\n","0  [' Leisure trip ', ' Couple ', ' Studio Suite ...           531 day   \n","1  [' Business trip ', ' Couple ', ' Standard Dou...           203 day   \n","2  [' Leisure trip ', ' Solo traveler ', ' Modern...           289 day   \n","3  [' Leisure trip ', ' Solo traveler ', ' Standa...           681 day   \n","4  [' Business trip ', ' Couple ', ' Standard Dou...           516 day   \n","\n","         lat       lng  \n","0  51.507894 -0.143671  \n","1  51.521009 -0.123097  \n","2  48.845377  2.325643  \n","3  48.888697  2.394540  \n","4  52.385601  4.847060  "],"text/html":["\n","  <div id=\"df-979b679d-cb67-4c58-8cf1-30f148397c5e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>hotel_address</th>\n","      <th>additional_number_of_scoring</th>\n","      <th>review_date</th>\n","      <th>average_score</th>\n","      <th>hotel_name</th>\n","      <th>reviewer_nationality</th>\n","      <th>negative_review</th>\n","      <th>review_total_negative_word_counts</th>\n","      <th>total_number_of_reviews</th>\n","      <th>positive_review</th>\n","      <th>review_total_positive_word_counts</th>\n","      <th>total_number_of_reviews_reviewer_has_given</th>\n","      <th>reviewer_score</th>\n","      <th>tags</th>\n","      <th>days_since_review</th>\n","      <th>lat</th>\n","      <th>lng</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Stratton Street Mayfair Westminster Borough Lo...</td>\n","      <td>581</td>\n","      <td>2/19/2016</td>\n","      <td>8.4</td>\n","      <td>The May Fair Hotel</td>\n","      <td>United Kingdom</td>\n","      <td>Leaving</td>\n","      <td>3.0</td>\n","      <td>1994.0</td>\n","      <td>Staff were amazing</td>\n","      <td>4.0</td>\n","      <td>7.0</td>\n","      <td>10.0</td>\n","      <td>[' Leisure trip ', ' Couple ', ' Studio Suite ...</td>\n","      <td>531 day</td>\n","      <td>51.507894</td>\n","      <td>-0.143671</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>130 134 Southampton Row Camden London WC1B 5AF...</td>\n","      <td>299</td>\n","      <td>1/12/2017</td>\n","      <td>8.3</td>\n","      <td>Mercure London Bloomsbury Hotel</td>\n","      <td>United Kingdom</td>\n","      <td>poor breakfast</td>\n","      <td>3.0</td>\n","      <td>1361.0</td>\n","      <td>location</td>\n","      <td>2.0</td>\n","      <td>14.0</td>\n","      <td>6.3</td>\n","      <td>[' Business trip ', ' Couple ', ' Standard Dou...</td>\n","      <td>203 day</td>\n","      <td>51.521009</td>\n","      <td>-0.123097</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>151 bis Rue de Rennes 6th arr 75006 Paris France</td>\n","      <td>32</td>\n","      <td>10/18/2016</td>\n","      <td>8.9</td>\n","      <td>Legend Saint Germain by Elegancia</td>\n","      <td>China</td>\n","      <td>No kettle in room</td>\n","      <td>6.0</td>\n","      <td>406.0</td>\n","      <td>No Positive</td>\n","      <td>0.0</td>\n","      <td>14.0</td>\n","      <td>7.5</td>\n","      <td>[' Leisure trip ', ' Solo traveler ', ' Modern...</td>\n","      <td>289 day</td>\n","      <td>48.845377</td>\n","      <td>2.325643</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>216 Avenue Jean Jaures 19th arr 75019 Paris Fr...</td>\n","      <td>34</td>\n","      <td>9/22/2015</td>\n","      <td>7.5</td>\n","      <td>Mercure Paris 19 Philharmonie La Villette</td>\n","      <td>United Kingdom</td>\n","      <td>No Negative</td>\n","      <td>0.0</td>\n","      <td>607.0</td>\n","      <td>Friendly staff quiet comfortable room spotles...</td>\n","      <td>11.0</td>\n","      <td>8.0</td>\n","      <td>10.0</td>\n","      <td>[' Leisure trip ', ' Solo traveler ', ' Standa...</td>\n","      <td>681 day</td>\n","      <td>48.888697</td>\n","      <td>2.394540</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Molenwerf 1 1014 AG Amsterdam Netherlands</td>\n","      <td>914</td>\n","      <td>3/5/2016</td>\n","      <td>8.5</td>\n","      <td>Golden Tulip Amsterdam West</td>\n","      <td>Poland</td>\n","      <td>Torn sheets</td>\n","      <td>4.0</td>\n","      <td>7586.0</td>\n","      <td>The staff was very friendly and helpful Break...</td>\n","      <td>20.0</td>\n","      <td>10.0</td>\n","      <td>9.6</td>\n","      <td>[' Business trip ', ' Couple ', ' Standard Dou...</td>\n","      <td>516 day</td>\n","      <td>52.385601</td>\n","      <td>4.847060</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-979b679d-cb67-4c58-8cf1-30f148397c5e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-979b679d-cb67-4c58-8cf1-30f148397c5e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-979b679d-cb67-4c58-8cf1-30f148397c5e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e7c7413a-dd9c-45e2-ad5d-88dfd8461253\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7c7413a-dd9c-45e2-ad5d-88dfd8461253')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e7c7413a-dd9c-45e2-ad5d-88dfd8461253 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["## Задание 2.1\n","\n","В каких столбцах данные содержат пропущенные значения?\n"],"metadata":{"id":"o3ruCmKsZOwf"}},{"cell_type":"code","source":["print('Размерность предоставленных данных - {}'.format(hotels.shape), end='\\n\\n')\n","\n","hotels.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s9vIOzDUZSeK","executionInfo":{"status":"ok","timestamp":1701659183491,"user_tz":-180,"elapsed":44,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"248aa606-3ea7-43b9-d0f1-d12c2dd24e20"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Размерность предоставленных данных - (25045, 17)\n","\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 25045 entries, 0 to 25044\n","Data columns (total 17 columns):\n"," #   Column                                      Non-Null Count  Dtype  \n","---  ------                                      --------------  -----  \n"," 0   hotel_address                               25045 non-null  object \n"," 1   additional_number_of_scoring                25045 non-null  int64  \n"," 2   review_date                                 25045 non-null  object \n"," 3   average_score                               25045 non-null  float64\n"," 4   hotel_name                                  25045 non-null  object \n"," 5   reviewer_nationality                        25044 non-null  object \n"," 6   negative_review                             25044 non-null  object \n"," 7   review_total_negative_word_counts           25044 non-null  float64\n"," 8   total_number_of_reviews                     25044 non-null  float64\n"," 9   positive_review                             25044 non-null  object \n"," 10  review_total_positive_word_counts           25044 non-null  float64\n"," 11  total_number_of_reviews_reviewer_has_given  25044 non-null  float64\n"," 12  reviewer_score                              25044 non-null  float64\n"," 13  tags                                        25044 non-null  object \n"," 14  days_since_review                           25044 non-null  object \n"," 15  lat                                         24906 non-null  float64\n"," 16  lng                                         24906 non-null  float64\n","dtypes: float64(8), int64(1), object(8)\n","memory usage: 3.2+ MB\n"]}]},{"cell_type":"code","source":["hotels = hotels.drop(\n","  ['hotel_address', 'review_date', 'hotel_name', 'reviewer_nationality', 'negative_review', \\\n","        'positive_review', 'tags', 'days_since_review'] ,\n","  axis=1\n",")"],"metadata":{"id":"_fCjuEjQed8-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["hotels.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9TzcLOfUfIXs","executionInfo":{"status":"ok","timestamp":1701659183493,"user_tz":-180,"elapsed":34,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"3a125dd8-19f7-441e-8e7a-99177854f9c2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 25045 entries, 0 to 25044\n","Data columns (total 9 columns):\n"," #   Column                                      Non-Null Count  Dtype  \n","---  ------                                      --------------  -----  \n"," 0   additional_number_of_scoring                25045 non-null  int64  \n"," 1   average_score                               25045 non-null  float64\n"," 2   review_total_negative_word_counts           25044 non-null  float64\n"," 3   total_number_of_reviews                     25044 non-null  float64\n"," 4   review_total_positive_word_counts           25044 non-null  float64\n"," 5   total_number_of_reviews_reviewer_has_given  25044 non-null  float64\n"," 6   reviewer_score                              25044 non-null  float64\n"," 7   lat                                         24906 non-null  float64\n"," 8   lng                                         24906 non-null  float64\n","dtypes: float64(8), int64(1)\n","memory usage: 1.7 MB\n"]}]},{"cell_type":"code","source":["values = {\n","    'review_total_positive_word_counts': hotels['review_total_positive_word_counts'].median(),\n","    'total_number_of_reviews_reviewer_has_given': hotels['review_total_positive_word_counts'].median(),\n","    'reviewer_score': hotels['reviewer_score'].mean(),\n","    'lat': hotels['lat'].mean(),\n","    'lng': hotels['lng'].mean()\n","}\n","\n","hotels = hotels.fillna(values)"],"metadata":{"id":"dee29CrYfzHF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["hotels.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fc7vamDjgd8j","executionInfo":{"status":"ok","timestamp":1701659183494,"user_tz":-180,"elapsed":23,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"c8a90853-ca36-4d50-8a0f-eb2974442e28"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 25045 entries, 0 to 25044\n","Data columns (total 9 columns):\n"," #   Column                                      Non-Null Count  Dtype  \n","---  ------                                      --------------  -----  \n"," 0   additional_number_of_scoring                25045 non-null  int64  \n"," 1   average_score                               25045 non-null  float64\n"," 2   review_total_negative_word_counts           25044 non-null  float64\n"," 3   total_number_of_reviews                     25044 non-null  float64\n"," 4   review_total_positive_word_counts           25045 non-null  float64\n"," 5   total_number_of_reviews_reviewer_has_given  25045 non-null  float64\n"," 6   reviewer_score                              25045 non-null  float64\n"," 7   lat                                         25045 non-null  float64\n"," 8   lng                                         25045 non-null  float64\n","dtypes: float64(8), int64(1)\n","memory usage: 1.7 MB\n"]}]},{"cell_type":"code","source":["# Разбиваем датафрейм на части, необходимые для обучения и тестирования модели\n","# Х - данные с информацией об отелях, у - целевая переменная (рейтинги отелей)\n","X = hotels.drop(['reviewer_score'], axis = 1)\n","y = hotels['reviewer_score']"],"metadata":{"id":"myXl9luoc51J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Загружаем специальный инструмент для разбивки:\n","from sklearn.model_selection import train_test_split"],"metadata":{"id":"b6wx4Vj_dDWo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Наборы данных с меткой \"train\" будут использоваться для обучения модели, \"test\" - для тестирования.\n","# Для тестирования мы будем использовать 25% от исходного датасета.\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)"],"metadata":{"id":"fCeaKNCTdE28"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Сравниваем предсказанные значения (y_pred) с реальными (y_test) и смотрим, насколько они отличаются\n","# Метрика называется Mean Absolute Percentage Error (MAPE) и показывает среднюю абсолютную процентную ошибку предсказанных значений в отношении фактических.\n","print('MAPE:', metrics.mean_absolute_percentage_error(y_test, y_pred))"],"metadata":{"id":"imL4B1Q-deOD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# С обработкой текстовых признаков\n"],"metadata":{"id":"6UZnwudAp6pa"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"BrQqoJMM-cxR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["hotels = pd.read_csv('hotels.csv')\n","hotels.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":678},"id":"w6OHNzLFp5jf","executionInfo":{"status":"ok","timestamp":1701661781591,"user_tz":-180,"elapsed":3203,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"db651fd1-d8e4-47ae-c1f6-b0e5e99b6843"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                       hotel_address  \\\n","0  Stratton Street Mayfair Westminster Borough Lo...   \n","1  130 134 Southampton Row Camden London WC1B 5AF...   \n","2   151 bis Rue de Rennes 6th arr 75006 Paris France   \n","3  216 Avenue Jean Jaures 19th arr 75019 Paris Fr...   \n","4          Molenwerf 1 1014 AG Amsterdam Netherlands   \n","\n","   additional_number_of_scoring review_date  average_score  \\\n","0                           581   2/19/2016            8.4   \n","1                           299   1/12/2017            8.3   \n","2                            32  10/18/2016            8.9   \n","3                            34   9/22/2015            7.5   \n","4                           914    3/5/2016            8.5   \n","\n","                                  hotel_name reviewer_nationality  \\\n","0                         The May Fair Hotel      United Kingdom    \n","1            Mercure London Bloomsbury Hotel      United Kingdom    \n","2          Legend Saint Germain by Elegancia               China    \n","3  Mercure Paris 19 Philharmonie La Villette      United Kingdom    \n","4                Golden Tulip Amsterdam West              Poland    \n","\n","       negative_review  review_total_negative_word_counts  \\\n","0             Leaving                                   3   \n","1       poor breakfast                                  3   \n","2   No kettle in room                                   6   \n","3          No Negative                                  0   \n","4         Torn sheets                                   4   \n","\n","   total_number_of_reviews                                    positive_review  \\\n","0                     1994                                 Staff were amazing   \n","1                     1361                                           location   \n","2                      406                                        No Positive   \n","3                      607   Friendly staff quiet comfortable room spotles...   \n","4                     7586   The staff was very friendly and helpful Break...   \n","\n","   review_total_positive_word_counts  \\\n","0                                  4   \n","1                                  2   \n","2                                  0   \n","3                                 11   \n","4                                 20   \n","\n","   total_number_of_reviews_reviewer_has_given  reviewer_score  \\\n","0                                           7            10.0   \n","1                                          14             6.3   \n","2                                          14             7.5   \n","3                                           8            10.0   \n","4                                          10             9.6   \n","\n","                                                tags days_since_review  \\\n","0  [' Leisure trip ', ' Couple ', ' Studio Suite ...           531 day   \n","1  [' Business trip ', ' Couple ', ' Standard Dou...           203 day   \n","2  [' Leisure trip ', ' Solo traveler ', ' Modern...           289 day   \n","3  [' Leisure trip ', ' Solo traveler ', ' Standa...           681 day   \n","4  [' Business trip ', ' Couple ', ' Standard Dou...           516 day   \n","\n","         lat       lng  \n","0  51.507894 -0.143671  \n","1  51.521009 -0.123097  \n","2  48.845377  2.325643  \n","3  48.888697  2.394540  \n","4  52.385601  4.847060  "],"text/html":["\n","  <div id=\"df-d2584607-1e0d-482d-8bc7-74310f5104af\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>hotel_address</th>\n","      <th>additional_number_of_scoring</th>\n","      <th>review_date</th>\n","      <th>average_score</th>\n","      <th>hotel_name</th>\n","      <th>reviewer_nationality</th>\n","      <th>negative_review</th>\n","      <th>review_total_negative_word_counts</th>\n","      <th>total_number_of_reviews</th>\n","      <th>positive_review</th>\n","      <th>review_total_positive_word_counts</th>\n","      <th>total_number_of_reviews_reviewer_has_given</th>\n","      <th>reviewer_score</th>\n","      <th>tags</th>\n","      <th>days_since_review</th>\n","      <th>lat</th>\n","      <th>lng</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Stratton Street Mayfair Westminster Borough Lo...</td>\n","      <td>581</td>\n","      <td>2/19/2016</td>\n","      <td>8.4</td>\n","      <td>The May Fair Hotel</td>\n","      <td>United Kingdom</td>\n","      <td>Leaving</td>\n","      <td>3</td>\n","      <td>1994</td>\n","      <td>Staff were amazing</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>10.0</td>\n","      <td>[' Leisure trip ', ' Couple ', ' Studio Suite ...</td>\n","      <td>531 day</td>\n","      <td>51.507894</td>\n","      <td>-0.143671</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>130 134 Southampton Row Camden London WC1B 5AF...</td>\n","      <td>299</td>\n","      <td>1/12/2017</td>\n","      <td>8.3</td>\n","      <td>Mercure London Bloomsbury Hotel</td>\n","      <td>United Kingdom</td>\n","      <td>poor breakfast</td>\n","      <td>3</td>\n","      <td>1361</td>\n","      <td>location</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>6.3</td>\n","      <td>[' Business trip ', ' Couple ', ' Standard Dou...</td>\n","      <td>203 day</td>\n","      <td>51.521009</td>\n","      <td>-0.123097</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>151 bis Rue de Rennes 6th arr 75006 Paris France</td>\n","      <td>32</td>\n","      <td>10/18/2016</td>\n","      <td>8.9</td>\n","      <td>Legend Saint Germain by Elegancia</td>\n","      <td>China</td>\n","      <td>No kettle in room</td>\n","      <td>6</td>\n","      <td>406</td>\n","      <td>No Positive</td>\n","      <td>0</td>\n","      <td>14</td>\n","      <td>7.5</td>\n","      <td>[' Leisure trip ', ' Solo traveler ', ' Modern...</td>\n","      <td>289 day</td>\n","      <td>48.845377</td>\n","      <td>2.325643</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>216 Avenue Jean Jaures 19th arr 75019 Paris Fr...</td>\n","      <td>34</td>\n","      <td>9/22/2015</td>\n","      <td>7.5</td>\n","      <td>Mercure Paris 19 Philharmonie La Villette</td>\n","      <td>United Kingdom</td>\n","      <td>No Negative</td>\n","      <td>0</td>\n","      <td>607</td>\n","      <td>Friendly staff quiet comfortable room spotles...</td>\n","      <td>11</td>\n","      <td>8</td>\n","      <td>10.0</td>\n","      <td>[' Leisure trip ', ' Solo traveler ', ' Standa...</td>\n","      <td>681 day</td>\n","      <td>48.888697</td>\n","      <td>2.394540</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Molenwerf 1 1014 AG Amsterdam Netherlands</td>\n","      <td>914</td>\n","      <td>3/5/2016</td>\n","      <td>8.5</td>\n","      <td>Golden Tulip Amsterdam West</td>\n","      <td>Poland</td>\n","      <td>Torn sheets</td>\n","      <td>4</td>\n","      <td>7586</td>\n","      <td>The staff was very friendly and helpful Break...</td>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>9.6</td>\n","      <td>[' Business trip ', ' Couple ', ' Standard Dou...</td>\n","      <td>516 day</td>\n","      <td>52.385601</td>\n","      <td>4.847060</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d2584607-1e0d-482d-8bc7-74310f5104af')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d2584607-1e0d-482d-8bc7-74310f5104af button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d2584607-1e0d-482d-8bc7-74310f5104af');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7728ebf1-9e40-447e-8104-b46e677df4a9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7728ebf1-9e40-447e-8104-b46e677df4a9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7728ebf1-9e40-447e-8104-b46e677df4a9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["hotels.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WkW1w5yj-YVl","executionInfo":{"status":"ok","timestamp":1701661796284,"user_tz":-180,"elapsed":1596,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"50afa081-7aa7-4694-8ec2-78a26ab70d26"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 386803 entries, 0 to 386802\n","Data columns (total 17 columns):\n"," #   Column                                      Non-Null Count   Dtype  \n","---  ------                                      --------------   -----  \n"," 0   hotel_address                               386803 non-null  object \n"," 1   additional_number_of_scoring                386803 non-null  int64  \n"," 2   review_date                                 386803 non-null  object \n"," 3   average_score                               386803 non-null  float64\n"," 4   hotel_name                                  386803 non-null  object \n"," 5   reviewer_nationality                        386803 non-null  object \n"," 6   negative_review                             386803 non-null  object \n"," 7   review_total_negative_word_counts           386803 non-null  int64  \n"," 8   total_number_of_reviews                     386803 non-null  int64  \n"," 9   positive_review                             386803 non-null  object \n"," 10  review_total_positive_word_counts           386803 non-null  int64  \n"," 11  total_number_of_reviews_reviewer_has_given  386803 non-null  int64  \n"," 12  reviewer_score                              386803 non-null  float64\n"," 13  tags                                        386803 non-null  object \n"," 14  days_since_review                           386803 non-null  object \n"," 15  lat                                         384355 non-null  float64\n"," 16  lng                                         384355 non-null  float64\n","dtypes: float64(4), int64(5), object(8)\n","memory usage: 50.2+ MB\n"]}]},{"cell_type":"code","source":["values = {\n","    'review_total_positive_word_counts': hotels['review_total_positive_word_counts'].median(),\n","    'total_number_of_reviews_reviewer_has_given': hotels['review_total_positive_word_counts'].median(),\n","    'reviewer_score': hotels['reviewer_score'].mean(),\n","    'lat': hotels['lat'].mean(),\n","    'lng': hotels['lng'].mean()\n","}\n","\n","hotels = hotels.fillna(values)"],"metadata":{"id":"KQ3WkiU9Bmr2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["hotels = hotels.drop(\n","  ['hotel_address', 'review_date', 'hotel_name', 'reviewer_nationality', 'negative_review', \\\n","        'positive_review', 'tags', 'days_since_review'] ,\n","  axis=1\n",")"],"metadata":{"id":"zgjoaKbhDjli"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["hotels.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7XOitFP6Dkgs","executionInfo":{"status":"ok","timestamp":1701661800287,"user_tz":-180,"elapsed":293,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"505137f6-6add-46a2-c012-ba93c8a88ca5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 386803 entries, 0 to 386802\n","Data columns (total 9 columns):\n"," #   Column                                      Non-Null Count   Dtype  \n","---  ------                                      --------------   -----  \n"," 0   additional_number_of_scoring                386803 non-null  int64  \n"," 1   average_score                               386803 non-null  float64\n"," 2   review_total_negative_word_counts           386803 non-null  int64  \n"," 3   total_number_of_reviews                     386803 non-null  int64  \n"," 4   review_total_positive_word_counts           386803 non-null  int64  \n"," 5   total_number_of_reviews_reviewer_has_given  386803 non-null  int64  \n"," 6   reviewer_score                              386803 non-null  float64\n"," 7   lat                                         386803 non-null  float64\n"," 8   lng                                         386803 non-null  float64\n","dtypes: float64(4), int64(5)\n","memory usage: 26.6 MB\n"]}]},{"cell_type":"code","source":["# непрерывные признаки\n","num_cols = ['total_number_of_reviews', 'review_total_negative_word_counts', 'review_total_positive_word_counts',\n","            'additional_number_of_scoring', 'lng']\n","\n","# категориальные признаки\n","cat_cols = ['average_score', 'lat', 'total_number_of_reviews_reviewer_has_given']"],"metadata":{"id":"Aa6Qe9HD-Nhm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Разбиваем датафрейм на части, необходимые для обучения и тестирования модели\n","# Х - данные с информацией об отелях, у - целевая переменная (рейтинги отелей)\n","X = hotels.drop(['reviewer_score'], axis = 1)\n","y = hotels['reviewer_score']"],"metadata":{"id":"pPRkHva1CkX8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y=y.astype('int')\n","\n","from sklearn.feature_selection import chi2 # хи-квадрат\n","\n","imp_cat = pd.Series(chi2(X[cat_cols], y)[0], index=cat_cols)\n","imp_cat.sort_values(inplace = True)\n","imp_cat.plot(kind = 'barh')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":439},"id":"S3bgYz5ZBRPo","executionInfo":{"status":"ok","timestamp":1701661805253,"user_tz":-180,"elapsed":463,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"e5690c3b-e119-4f7b-aa12-ec71b4163930"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":41},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.feature_selection import f_classif # anova\n","\n","imp_num = pd.Series(f_classif(X[num_cols], y)[0], index = num_cols)\n","imp_num.sort_values(inplace = True)\n","imp_num.plot(kind = 'barh')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"pyjmQB7UFfJk","executionInfo":{"status":"ok","timestamp":1701661808930,"user_tz":-180,"elapsed":1250,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"e562e3b6-aba8-42b1-b4dc-022acc164a98"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":42},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Работа с вопросами"],"metadata":{"id":"9NHMgP_jy_mx"}},{"cell_type":"code","source":["hotels3 = pd.read_csv('hotels.csv')"],"metadata":{"id":"wcZg45mAGS_y"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Задание 4.2\n","\n","Сколько уникальных названий отелей представлено в наборе данных?"],"metadata":{"id":"7Tual1BRGtQg"}},{"cell_type":"code","source":["print('Число уникальных названий отелей в выборке - {}'.format(hotels3['hotel_name'].nunique()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FgOsPXapGc7f","executionInfo":{"status":"ok","timestamp":1701661817554,"user_tz":-180,"elapsed":321,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"c52f02e4-a13f-439e-addf-b7bd15e5c511"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Число уникальных названий отелей в выборке - 1492\n"]}]},{"cell_type":"markdown","source":["## Задание 4.3\n","\n","Ответьте на вопросы о дате размещения отзывов.\n","Когда был оставлен самый свежий отзыв? Введите ответ в формате yyyy-mm-dd."],"metadata":{"id":"nh_nV-ZWGxfF"}},{"cell_type":"code","source":["hotels3['review_date'] = pd.to_datetime(hotels3['review_date'])"],"metadata":{"id":"JebkKhyTHi85"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('Самый свежий отзыв был оставлен {}'.format(hotels3['review_date'].max()))\n","\n","print('Самый старый отзыв был оставлен {}'.format(hotels3['review_date'].min()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P6bikX7aG1wm","executionInfo":{"status":"ok","timestamp":1701661821284,"user_tz":-180,"elapsed":281,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"08f2b994-bdfb-4dcf-c8cd-2a294da3755d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Самый свежий отзыв был оставлен 2017-08-03 00:00:00\n","Самый старый отзыв был оставлен 2015-08-04 00:00:00\n"]}]},{"cell_type":"markdown","source":["## Задание 4.4 + Задание 4.5\n","\n","Сколько уникальных тегов представлено в наборе данных?\n","\n","Какой тег представлен в наибольшем числе отзывов?\n"],"metadata":{"id":"WqIzjJjrHw7g"}},{"cell_type":"code","source":["import re # дополнительная библиотека для очистки строки, созданной из массива\n","\n","dict_of_tags = dict()\n","\n","for i in range(hotels3.shape[0]):\n","  tags = re.sub(\"['|\\[|\\]]\", \"\", hotels3['tags'].iloc[i]).split(' , ')\n","  tags = [tag.replace(' ', '', 1) for tag in tags]\n","  tags[-1] = tags[-1][:-1]\n","  for tag in tags:\n","    if tag not in dict_of_tags:\n","      dict_of_tags[tag] = 1\n","    else:\n","      dict_of_tags[tag] += 1"],"metadata":{"id":"Xc916BkLHwhK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('Всего представленно тегов: {}'.format(len(dict_of_tags)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"08R9L2R3_gVL","executionInfo":{"status":"ok","timestamp":1701662726856,"user_tz":-180,"elapsed":395,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"0d1e9b08-3e30-44a5-a51c-0a2fc8872df3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Всего представленно тегов: 2368\n"]}]},{"cell_type":"code","source":["sorted_dict_of_tags = sorted(dict_of_tags.items(), key=lambda item: item[1])\n","print('Самый популерный тег - {}, он входит {} раза '.format(*sorted_dict_of_tags[-1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xGy6MouYAWl8","executionInfo":{"status":"ok","timestamp":1701663040921,"user_tz":-180,"elapsed":291,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"92130bef-c7c8-400f-bbd6-661dea8a5a2a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Самый популерный тег - Leisure trip, он входит 313593 раза \n"]}]},{"cell_type":"markdown","source":["## Задание 4.6\n","\n","Из тегов выясните, на сколько ночей чаще всего останавливаются путешественники в отелях.\n"],"metadata":{"id":"Swns-orfBc9_"}},{"cell_type":"code","source":["tags = pd.DataFrame(sorted_dict_of_tags)\n","display(tags)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"nC3bB-ZBBqfe","executionInfo":{"status":"ok","timestamp":1701663783040,"user_tz":-180,"elapsed":502,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"dd9cd165-5925-4bf5-cffe-3edcf41a774a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["                                                      0       1\n","0                               King Room with Sea View       1\n","1                                             Penthouse       1\n","2     Superior Double or Twin Room XL with Extra Bed...       1\n","3           Double Room Atelier d Artiste with Spa Bath       1\n","4                      Octagon Suite with Lounge Access       1\n","...                                                 ...     ...\n","2363                                    Stayed 2 nights  100263\n","2364                                     Stayed 1 night  145373\n","2365                                             Couple  189212\n","2366                     Submitted from a mobile device  230778\n","2367                                       Leisure trip  313593\n","\n","[2368 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-256ae222-105c-49a1-aac3-5ccf8b149580\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>King Room with Sea View</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Penthouse</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Superior Double or Twin Room XL with Extra Bed...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Double Room Atelier d Artiste with Spa Bath</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Octagon Suite with Lounge Access</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2363</th>\n","      <td>Stayed 2 nights</td>\n","      <td>100263</td>\n","    </tr>\n","    <tr>\n","      <th>2364</th>\n","      <td>Stayed 1 night</td>\n","      <td>145373</td>\n","    </tr>\n","    <tr>\n","      <th>2365</th>\n","      <td>Couple</td>\n","      <td>189212</td>\n","    </tr>\n","    <tr>\n","      <th>2366</th>\n","      <td>Submitted from a mobile device</td>\n","      <td>230778</td>\n","    </tr>\n","    <tr>\n","      <th>2367</th>\n","      <td>Leisure trip</td>\n","      <td>313593</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2368 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-256ae222-105c-49a1-aac3-5ccf8b149580')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-256ae222-105c-49a1-aac3-5ccf8b149580 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-256ae222-105c-49a1-aac3-5ccf8b149580');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-acfcfd8c-1fb3-4938-b842-41947816c1c0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-acfcfd8c-1fb3-4938-b842-41947816c1c0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-acfcfd8c-1fb3-4938-b842-41947816c1c0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{}}]},{"cell_type":"markdown","source":["## Задание 4.7\n","Какое значение метрики MAPE вам удалось получить на этом этапе?\n"],"metadata":{"id":"VcI5Ui4eCQwG"}},{"cell_type":"code","source":["X = X.drop(['lng', 'additional_number_of_scoring', 'total_number_of_reviews'], axis=1)"],"metadata":{"id":"bk71VE0tCbcw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RLTSV42eEcsz","executionInfo":{"status":"ok","timestamp":1701663858526,"user_tz":-180,"elapsed":329,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"aab452be-7d8a-40c7-b2f5-f566f1a8c63f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 386803 entries, 0 to 386802\n","Data columns (total 5 columns):\n"," #   Column                                      Non-Null Count   Dtype  \n","---  ------                                      --------------   -----  \n"," 0   average_score                               386803 non-null  float64\n"," 1   review_total_negative_word_counts           386803 non-null  int64  \n"," 2   review_total_positive_word_counts           386803 non-null  int64  \n"," 3   total_number_of_reviews_reviewer_has_given  386803 non-null  int64  \n"," 4   lat                                         386803 non-null  float64\n","dtypes: float64(2), int64(3)\n","memory usage: 14.8 MB\n"]}]},{"cell_type":"code","source":["y=y.astype('int')"],"metadata":{"id":"S3QuzOABEorP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","# Наборы данных с меткой \"train\" будут использоваться для обучения модели, \"test\" - для тестирования.\n","# Для тестирования мы будем использовать 25% от исходного датасета.\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)\n","\n","# Импортируем необходимые библиотеки:\n","from sklearn.ensemble import RandomForestRegressor # инструмент для создания и обучения модели\n","from sklearn import metrics # инструменты для оценки точности модели\n","\n","# Создаём модель\n","regr = RandomForestRegressor(n_estimators=100)\n","\n","# Обучаем модель на тестовом наборе данных\n","regr.fit(X_train, y_train)\n","\n","# Используем обученную модель для предсказания рейтинга отелей в тестовой выборке.\n","# Предсказанные значения записываем в переменную y_pred\n","y_pred = regr.predict(X_test)\n","\n","# Сравниваем предсказанные значения (y_pred) с реальными (y_test) и смотрим, насколько они отличаются\n","# Метрика называется Mean Absolute Percentage Error (MAPE) и показывает среднюю абсолютную процентную ошибку предсказанных значений в отношении фактических.\n","print('MAPE:', metrics.mean_absolute_percentage_error(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sukqqv9kClIJ","executionInfo":{"status":"ok","timestamp":1701664031027,"user_tz":-180,"elapsed":122264,"user":{"displayName":"Artur Artikov","userId":"03152393008805217608"}},"outputId":"5b1ba86c-6029-40c4-c3eb-cc641588a81f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MAPE: 0.16812204509282896\n"]}]}]}