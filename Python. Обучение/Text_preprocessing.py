text = 'Мы идем, по полю вдвоем, по полю, по полю, по широкому полю.'  # записываем заданный текст для проверки условия

# Переводим текст к нижнему регистру и избавляемся от знаков препинания: , . ? ! " - 
words = text.lower()
words = words.replace(',', '')
words = words.replace('.', '')
words = words.replace('!', '')
words = words.replace('?', '')
words = words.replace('"', '')
words = words.replace('-', '')

# words1 - список слов в нижнем регистре без знаков препинания
words1 = words.split(' ')
# words2 - список слов в стандартном регистре со знаками препинания
words2 = text.split(' ')

# dw - словарь содержащий слова и информацию об их вхождениях в предложение
dw = {}
# count - счетчик-показатель порядка повторяющегося слова
count = 0

# Выводим отредактированную строку
print('Отредоктированная строка: ')
# Создаем цикл для прохождения по индексам списка
for i in range(len(words1)):
    # Проверяем наличие слова в списке слов
    if words1[i] not in dw:
        # Если слово отсутствует в словаре, т.е. его значение является новым и уникальным, то
        # добавляем слово в словарь со значением равным нулю
        dw[words1[i]] = 0
        # Выводим слово на идентичной позиции со знаками препинания
        print(words2[i], end=' ')

    # Если слово встречалось в словаре и его значение не равно нулю, 
    # то следует изменить записывать повторяющееся слово с помощью цифры
    elif words1[i] in dw and dw[words1[i]] != 0:
        # если у изначального слова была запятая, то печатаем ее вместе с цифрой
        if words2[i].endswith(','):
            print(str(dw[words1[i]])+',', end=' ')
        else:
        # если запятой не было, то просто печатаем цифру
            print(dw[words1[i]], end=' ')
    
    # Если слово встречалось в словаре, но только единожды, то
    # следует изменить значение на следующее порядковое в виде цифры
    elif words1[i] in dw and dw[words1[i]] == 0:
        # увеличиваем счетчик counter на 1, для того чтобы заменить текущее повторяющееся слово на числой эквивалент
        count += 1 
        # перезаписываем значение для ключа в виде повторяющегося слова и значение в формате нового числа
        dw[words1[i]] = count
        # если слово заканчивалось на запятую, то печатаем число с ней
        if words2[i].endswith(','):
            print(str(dw[words1[i]])+',', end=' ')
        # если слово не заканчивалось на запятую, то печатаем просто число без нее
        else:
            print(dw[words1[i]], end=' ')

# создаем порядковый счетчик для показателя текущего заменяемого слова
counter = 1
# выводим информацию о словах-повторах
print('\n\nСлова-повторы: ')
# пробегаемся по ключам и значениям из словаря слов
for key, item in dw.items():
    # если значение не равно нулю, то значит что слово встречалось в тексте более 1 раза
    if item != 0:
        # выводим порядковый номер повторяющегося числа, само число и количество его вхождений в предложение
        print(f'{counter}. {key} {words1.count(key)}')
        # увеличиваем счетчик 
        counter += 1